version: '3'

networks:
  microservices-network:
    name: microservices-network

services:
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222
      - 4222:4222
    networks:
      - microservices-network

  ms-gateway:
    build: ./ms-gateway
    ports:
      - ${GATEWAY_PORT:-3000}:3000
    volumes:
      - ./ms-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222
    networks:
      - microservices-network

  ms-messages:
    depends_on:
      - db-messages
    build: ./ms-messages
    ports:
      - ${MESSAGES_PORT:-8000}:8000
    volumes:
      - ./ms-messages/app:/app/app
      - ./ms-messages/alembic:/app/alembic
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PORT=${MESSAGES_PORT:-8000}
      - NATS_SERVERS=${NATS_SERVERS:-nats://nats-server:4222}
      - DB_NAME=${DB_MESSAGES_NAME:-message-app-db}
      - DB_USERNAME=${DB_MESSAGES_USERNAME:-postgres}
      - DB_PASSWORD=${DB_MESSAGES_PASSWORD:-123456}
      - DB_HOST=${DB_MESSAGES_HOST:-db-messages}
      - DB_PORT=${DB_MESSAGES_PORT:-5432}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - MCP_VOTING_URL=http://mcp-voting:8000/sse
      - MCP_BUDGET_URL=http://mcp-budget:8000/sse
      - MCP_ATTENDANCE_URL=http://mcp-attendance:8000/sse
    networks:
      - microservices-network

  db-messages:
    container_name: db-messages
    image: postgres:16.2
    restart: always
    volumes:
      - ./others/message-app-db/postgres:/var/lib/postgresql/data
      - ./others/message-app-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5532:5432
    environment:
      - POSTGRES_DB=${DB_MESSAGES_NAME:-message-app-db}
      - POSTGRES_USER=${DB_MESSAGES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_MESSAGES_PASSWORD:-123456}
    networks:
      - microservices-network

  mcp-static-server:
    image: nginx:1.25.3-alpine
    ports:
      - 8080:80
    volumes:
      - ./publicdata-yolo/data/h_compressed_dataset:/usr/share/nginx/html:ro
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - microservices-network